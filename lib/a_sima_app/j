import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_spinkit/flutter_spinkit.dart';
import 'package:sima_portal/a_sima_app/models/agentModel.dart';
import 'package:sima_portal/a_sima_app/services/online_services.dart';
import 'package:sima_portal/a_sima_app/components/Styles.dart';
import '../models/pazirandeModel2.dart';
import 'nesbat_model.dart';


class new_moaref_page extends StatefulWidget {
  List<AgentModel> _Agentdata = [];

  new_moaref_page(this._Agentdata);

  @override
  State<StatefulWidget> createState() => newMoaref_pageState();
}

class newMoaref_pageState extends State<new_moaref_page> {
  final _scaffoldKey = GlobalKey<ScaffoldState>();
  int currentPageIndex = 0;
  // final _key5 = GlobalKey<FormFieldState>();
  String _key1     = "";
  final  _key9   = GlobalKey<FormFieldState>();
  final  _key3_1   = GlobalKey<FormFieldState>();
  String _key4_1   = "";
  final  _key5_1_1 = GlobalKey<FormFieldState>();
  final  _key5_2_1 = GlobalKey<FormFieldState>();
  final  _key6_1_1 = GlobalKey<FormFieldState>();
  final  _key6_2_1 = GlobalKey<FormFieldState>();

  final _key10  = GlobalKey<FormFieldState>();
  final _key3_2  = GlobalKey<FormFieldState>();
  String _key4_2 = "";
  final _key5_1_2 = GlobalKey<FormFieldState>();
  final _key5_2_2 = GlobalKey<FormFieldState>();
  final _key6_1_2 = GlobalKey<FormFieldState>();
  final _key6_2_2 = GlobalKey<FormFieldState>();

  final  _keyA = GlobalKey<FormFieldState>();
  String _keyB = "";
  final  _keyC = GlobalKey<FormFieldState>();
  final  _keyD = GlobalKey<FormFieldState>();
  final  _keyE = GlobalKey<FormFieldState>();
  final  _keyF = GlobalKey<FormFieldState>();

  List<String> _pazirandeValue = [];
  List<String> nesbatList = [];
  String _pazirande_Value = "پذیرنده";
  List<String> _nesbatValue = [];
  String _nesbat_Value = "پذیرنده";
  List<PazirandeModel2> _data3 = [];
  bool loading = false;
  late TextEditingController _controller1 = TextEditingController(text: "پذیرنده");
  late TextEditingController _controller2 = TextEditingController(text: "نسبت");
  late TextEditingController _controller3 = TextEditingController(text: "نسبت");

  void getPazirandeList() async {
    Map response = await OnlineServices.getPazirandeList4({
      "agentcode": widget._Agentdata.last.agentCode,
      "usercode": widget._Agentdata.last.userCode
    });
    _data3.clear();
    _pazirandeValue.clear();
    _data3.addAll(response['data']);

    for (int i = 0; i < _data3.length; i++) {
      _pazirandeValue.add(_data3[i].pazirande);
    }
    setState(() {});
  }
  void getNesbatList() async {
    Map response = await OnlineServices.getNesbatList();
    nesbatList.clear();
    _nesbatValue.clear();
    // nesbatList = (response['data']);
    for (int i = 0; i < response["data"].length; i++) {
      nesbatList.add(response['data'][i]);
    }
    setState(() {});
  }

  @override
  void initState() {
    getPazirandeList();
    getNesbatList();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    var size = MediaQuery.of(context).size;
    Color cl = Color(0xff000000);
    return Scaffold(
      key: _scaffoldKey,
      backgroundColor: Colors.white,
      appBar: PreferredSize(preferredSize: Size.fromHeight(Comp.appBarHeight) ,child: Comp.app_bar("ثبت معرف پذیرنده","", Icons.edit, (){})),
      resizeToAvoidBottomInset: true,
      body: Stack(children: [
        Container(
          margin: EdgeInsets.only(top: 20),
          height: size.height,
          // color: Colors.white,
          child: ListView(
            // mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: <Widget>[
              Stack(
                alignment: Alignment.center,
                children: <Widget>[
                  Container(
                    margin: EdgeInsets.only(left: 30, right: 30, top: 10),
                    child: TextFormField(
                      textAlign: TextAlign.center,
                      controller: _controller1,
                      enabled: false,
                      cursorColor: Colors.black,
                      style: TextStyle(color: Colors.black, fontWeight: FontWeight.w800),
                      decoration: InputDecoration(
                        contentPadding: EdgeInsets.zero,

                        prefixIcon: Icon(
                          Icons.person,
                          color: Colors.black,
                        ),
                        labelStyle: TextStyle(color: cl, fontWeight: FontWeight.w800),
                        focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(color: cl)),
                        labelText: "پذیرنده",
                        disabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.all(Radius.circular(10.0)),
                            borderSide: BorderSide(color: cl)),
                      ),
                    ),
                  ),
                  Container(
                      alignment: Alignment.center,
                      margin: EdgeInsets.only(right: 35, left: 35, bottom: 6),
                      width: size.width,
                      padding: EdgeInsets.only(right: 60,left: 20),
                      child: DropdownButton<String>(
                          isExpanded: true,
                          underline: Container(),
                          items:_pazirandeValue.map((String val) {return DropdownMenuItem<String>(value: val, child: Text(val),);}).toList(),
                          onChanged: (newVal) {
                            _pazirande_Value = newVal!;
                            _key1 = newVal;
                            _controller1 = TextEditingController(text: _pazirande_Value);
                            setState(() {});
                          }))
                ],
              ),
              SizedBox(height: 20,),
              Row(
               mainAxisAlignment: MainAxisAlignment.spaceBetween,children: [
                SizedBox(child: Divider(thickness: .9,color: Colors.black,), width: size.width * .28,),
                Text("مشخصات معرف اول", style: TextStyle(fontWeight: FontWeight.w700)),
                SizedBox(child: Divider(thickness: .9,color: Colors.black,), width: size.width * .28,),

              ]),
              editBox1(context,1, 0,"نام و نام خانوادگی معرف", Icons.person_pin_outlined, _key9, ""),
              editBox1(context,0, 10,"کدملی معرف", Icons.person_pin_outlined, _key3_1, ""),
              Stack(
                alignment: Alignment.center,
                children: <Widget>[
                  Container(
                    margin: EdgeInsets.only(left: 30, right: 30, top: 10),
                    child: TextFormField(
                      textAlign: TextAlign.center,
                      controller: _controller2,
                      enabled: false,
                      cursorColor: Colors.black,
                      style: TextStyle(color: Colors.black, fontWeight: FontWeight.w800),
                      decoration: InputDecoration(
                        contentPadding: EdgeInsets.zero,

                        prefixIcon: Icon(
                          Icons.person,
                          color: Colors.black,
                        ),
                        labelStyle: TextStyle(color: cl, fontWeight: FontWeight.w800),
                        focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(color: cl)),
                        labelText: "نسبت",
                        disabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.all(Radius.circular(10.0)),
                            borderSide: BorderSide(color: cl)),
                      ),
                    ),
                  ),
                  Container(
                      alignment: Alignment.center,
                      margin: EdgeInsets.only(right: 35, left: 35, bottom: 6),
                      width: size.width,
                      padding: EdgeInsets.only(right: 60,left: 20),
                      child: DropdownButton<String>(
                          isExpanded: true,
                          underline: Container(),
                          items:nesbatList.map((String val) {return DropdownMenuItem<String>(value: val, child: Text(val),);}).toList(),
                          onChanged: (newVal) {
                            _nesbat_Value = newVal!;
                            _key4_1 = newVal;
                            _controller2 = TextEditingController(text: _nesbat_Value);
                            setState(() {});
                          }))
                ],
              ),
              Comp.editBox2(context,2,3,8, "پیش شماره","تلفن ثابت", Icons.phone, _key5_1_1, _key5_2_1, ""),
              Comp.editBox2(context,2,4,7, "پیش شماره","شماره همراه", Icons.phone_iphone, _key6_1_1, _key6_2_1, ""),
              ///##################################
              SizedBox(height: 20,),
              Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,children: [
                SizedBox(child: Divider(thickness: .9,color: Colors.black,), width: size.width * .28,),
                Text("مشخصات معرف دوم", style: TextStyle(fontWeight: FontWeight.w700)),
                SizedBox(child: Divider(thickness: .9,color: Colors.black,), width: size.width * .28,),

              ]),

              Comp.editBox1(context,1, 0,"نام و نام خانوادگی معرف", Icons.person_pin_outlined, _key10, ""),
              Comp.editBox1(context,0, 10,"کدملی معرف", Icons.person_pin_outlined, _key3_2, ""),
              Stack(
                alignment: Alignment.center,
                children: <Widget>[
                  Container(
                    margin: EdgeInsets.only(left: 30, right: 30, top: 10),
                    child: TextFormField(
                      textAlign: TextAlign.center,
                      controller: _controller3,
                      enabled: false,
                      cursorColor: Colors.black,
                      style: TextStyle(color: Colors.black, fontWeight: FontWeight.w800),
                      decoration: InputDecoration(
                        contentPadding: EdgeInsets.zero,

                        prefixIcon: Icon(
                          Icons.person,
                          color: Colors.black,
                        ),
                        labelStyle: TextStyle(color: cl, fontWeight: FontWeight.w800),
                        focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(color: cl)),
                        labelText: "نسبت",
                        disabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.all(Radius.circular(10.0)),
                            borderSide: BorderSide(color: cl)),
                      ),
                    ),
                  ),
                  Container(
                      alignment: Alignment.center,
                      margin: EdgeInsets.only(right: 35, left: 35, bottom: 6),
                      width: size.width,
                      padding: EdgeInsets.only(right: 60,left: 20),
                      child: DropdownButton<String>(
                          isExpanded: true,
                          underline: Container(),
                          items:nesbatList.map((String val) {return DropdownMenuItem<String>(value: val, child: Text(val),);}).toList(),
                          onChanged: (newVal) {
                            _nesbat_Value = newVal!;
                            _key4_2 = newVal;
                            _controller3 = TextEditingController(text: _nesbat_Value);
                            setState(() {});
                          }))
                ],
              ),
              Comp.editBox2(context,2,3,8, "پیش شماره","تلفن ثابت", Icons.phone, _key5_1_2, _key5_2_2, ""),
              Comp.editBox2(context,2,4,7, "پیش شماره","شماره همراه", Icons.phone_iphone, _key6_1_2, _key6_2_2, ""),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: <Widget>[
                  Comp.miniBtn1(
                      context, size, "ثبت اطلاعات", Colors.teal, fun, 1),
                  Comp.miniBtn1(
                      context, size, "انصراف", Colors.teal, () {}, 2),
                ],
              ),
              SizedBox(height: 30,)
            ],
          ),
        ),
        loading == true ? Comp.showLoading(size.height , size.width) : Center()

      ]),

    );
  }

   Widget editBox1(BuildContext context, int keyType, int max,
      String label, IconData ic, Key key, String initial) {
    var size = MediaQuery.of(context).size;
    Color cl = Colors.black;
    Color cl2 = Colors.red;
    return Container(
      margin: label == "شرح"
          ? EdgeInsets.only(left: 20, right: 20, top: 13)
          : EdgeInsets.only(left: 30, right: 30, top: 13),
      child: TextFormField(
        enabled: initial.length > 0 ? false : true,
        maxLength: max == 0 ? 200 : max,
        textInputAction: TextInputAction.next,
        initialValue: initial,
        keyboardType: keyType == 1 ? TextInputType.text : TextInputType.number,
        cursorColor: cl,
        maxLines: label == "آدرس"
            ? 3
            : label == "شرح"
            ? 5
            : 1,
        textAlign: label == "شرح" ? TextAlign.right : TextAlign.center,
        key: key,
        style: TextStyle(
            color: cl,
            fontWeight: label == "شرح" ? FontWeight.w400 : FontWeight.w800),
        decoration: InputDecoration(
          counterText: "",
          prefixIcon: Icon(
            ic,
            color: cl,
          ),
          enabledBorder: OutlineInputBorder(
            borderRadius: BorderRadius.circular(10.0),
            borderSide: BorderSide(
              color: cl,
              width: 1.0,
            ),
          ),
          fillColor: cl,
          focusColor: cl,
          hoverColor: cl,
          contentPadding: label == "شرح" ? EdgeInsets.all(8) : EdgeInsets.zero,

          //errorText: _errorText1,
          labelStyle: TextStyle(color: cl, fontWeight: FontWeight.w800),
          focusedBorder: OutlineInputBorder(
              borderRadius: BorderRadius.all(Radius.circular(10.0)),
              borderSide: BorderSide(color: cl)),

          labelText: label,
          disabledBorder: OutlineInputBorder(
              borderRadius: BorderRadius.all(Radius.circular(10.0)),
              borderSide: BorderSide(color: cl2)),
          // errorText: 'Error message',
          border: OutlineInputBorder(borderSide: BorderSide(color: cl)),
        ),
      ),
    );
  }


  void fun() {
   // print(_controller1.text);
    if (
        _controller1.text !="پذیرنده" &&
        _controller2.text !="نسبت" &&
        _controller3.text !="نسبت" &&
        _key9.currentState!.value.toString().length > 1 &&
        _key3_1.currentState!.value.toString().length == 10 &&
        _key5_1_1.currentState!.value.toString().length == 3 &&
        _key5_2_1.currentState!.value.toString().length == 8 &&
        _key6_1_1.currentState!.value.toString().length == 4 &&
        _key6_2_1.currentState!.value.toString().length == 7 &&

            _key10.currentState!.value.toString().length > 1 &&
            _key3_2.currentState!.value.toString().length == 10 &&
            _key5_1_2.currentState!.value.toString().length == 3 &&
            _key5_2_2.currentState!.value.toString().length == 8 &&
            _key6_1_2.currentState!.value.toString().length == 4 &&
            _key6_2_2.currentState!.value.toString().length == 7
    )
    {
      loading = true;
      setState(() {});
      sendDataForMoaref();

    } else
      Comp.showSnack(context, Icons.warning_amber_rounded, "0");
  }

  Future<String> sendDataForMoaref() async {
    late String today = "";
  late String datetime = "";

    String response = await (OnlineServices()).sendDataForSabtMoaref({
      "tarikh": today, "saat": datetime,
      "agentcode": widget._Agentdata.last.agentCode,
      "usercode": widget._Agentdata.last.userCode,
      "sanadpazirande": _key1.split("-").first,
      "namepazirande": _key1.split("-").last,
      // "name": _key2_1.currentState!.value,
      // "nametwo": _key2_2.currentState!.value,
      "tell": _key3_1.currentState!.value.toString(),
      "telltwo": _key3_1.currentState!.value.toString() + _key3_2.currentState!.value.toString(),
      "mobile": _key5_1_1.currentState!.value.toString() + _key5_2_1.currentState!.value.toString(),
      "mobiletwo": _key5_1_2.currentState!.value.toString() + _key5_2_2.currentState!.value.toString(),
      "codemeli": _key3_1.currentState!.value.toString(),
      "codemelitwo": _key3_2.currentState!.value.toString(),
      "nesbat": _key4_1.toString(),
      "nesbattwo": _key4_2.toString()
    });
    //   print(response);
    if (response == "ok") {
      loading = false;
      setState(() {});
      Navigator.pop(context);
      _showDialog(context);
    } else {
      // print("errrror");
    }

    return "";

  }

  void _showDialog(BuildContext context) {
    var size = MediaQuery.of(context).size;
    showDialog<void>(
      context: context,
      barrierDismissible: true, // user must tap button!
      builder: (BuildContext context) {
        return Container(
          decoration: BoxDecoration(
              borderRadius: BorderRadius.all(Radius.circular(18))),
          child: AlertDialog(
            content: SingleChildScrollView(
              child: ListBody(
                children: <Widget>[
                  Directionality(
                      textDirection: TextDirection.rtl,
                      child: Text('با موفقیت ثبت شد'))
                ],
              ),
            ),
            actions: <Widget>[
              ElevatedButton(
                  onPressed: () {
                    Navigator.pop(context);
                   // Navigator.pushReplacement(
                    //     context,
                    //     MaterialPageRoute(
                    //         builder: (BuildContext context) => Directionality(
                    //             textDirection: TextDirection.rtl,
                    //             child: appbar_home(widget._Agentdata))));
                  },
                  child: Text(
                    "تایید",
                    style: TextStyle(
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                        fontSize: 16),
                  ))
            ],
          ),
        );
      },
    );
  }
}